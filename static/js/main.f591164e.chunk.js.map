{"version":3,"sources":["components/addNote/AddNote.tsx","components/note/Note.tsx","components/NotesList/NotesList.tsx","components/search/Search.tsx","components/Header/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AddNote","handleAddNote","useState","noteText","setNoteText","className","cols","rows","value","placeholder","onChange","event","target","length","onClick","trim","Notes","id","text","date","handleDeleteNote","size","NotesList","notes","map","note","Search","handleSearchNote","type","Header","App","setNotes","searchText","setSearchText","useEffect","localStorageData","localStorage","getItem","savedNotes","JSON","parse","setItem","stringify","filter","toLowerCase","includes","newNotes","Date","newNote","nanoid","toLocaleDateString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f591164e.chunk.js","sourcesContent":["import { useState } from 'react';\nimport '../note/note.css'\nimport './AddNote.css'\n\nexport default function AddNote({handleAddNote}: any) {\n  const [noteText, setNoteText] = useState('')\n  const characterLimit = 200\n\n  function handleSaveClick(event: any) {\n    if (noteText.trim().length > 0) {\n      handleAddNote(noteText)\n      setNoteText(\"\")\n    }\n    \n  }\n\n  function handleChange(event: any) {\n    if (characterLimit - event.target.value.length >= 0) {\n      setNoteText(event.target.value)\n    }\n  }  \n\n  return (\n    <>\n      <div className=\"note add-new-note\">\n        <textarea \n          cols={10} \n          rows={8} \n          value={noteText}\n          placeholder=\"type to add a note\"\n          onChange={handleChange}\n        />\n          \n        <div className=\"note-footer\">\n          <small>{characterLimit - noteText.length} Remaining</small>\n          <button className=\"save-button\" onClick={handleSaveClick}>Save</button>\n        </div>\n      </div>\n    </>\n  );\n}\n","import { MdDeleteForever } from \"react-icons/md\";\nimport \"./note.css\";\n\nexport default function Notes({id, text, date, handleDeleteNote}: any) {\n  return (\n    <>\n      <div className=\"note\">\n        <span>{text}</span>\n        <div className=\"note-footer\">\n          <small>{date}</small>\n          <MdDeleteForever onClick={() => handleDeleteNote(id)} className=\"delete-icon\" size=\"1.3em\" />\n        </div>\n      </div>\n    </>\n  );\n}\n","import AddNote from \"../addNote/AddNote\";\nimport Note from \"../note/Note\";\nimport \"./NotesList.css\";\n\nexport default function NotesList({notes, handleAddNote, handleDeleteNote}: any) {\n  return (\n    <>\n      <div className=\"notes-list\">\n        {notes.map((note: any) => <Note key={note.id} id={note.id} text={note.text} date={note.date} handleDeleteNote={handleDeleteNote}/>)}\n        <AddNote handleAddNote={handleAddNote} />\n      </div>\n    </>\n  );\n}\n","import { MdSearch } from \"react-icons/md\";\nimport \"./Search.css\"\n\nexport default function Search({handleSearchNote}: any) {\n  return (\n    <>\n      <div className=\"search\">\n        <MdSearch className=\"search-icon\" size=\"1.3em\"/>\n        <input \n          onChange={(event) => handleSearchNote(event.target.value)}\n          type=\"text\" \n          placeholder=\"type to search for a note\"\n        />\n      </div>\n    </>\n  );\n}","import \"./Header.css\"\n\nexport default function Header({notes, handleAddNote, handleDeleteNote}: any) {\n  return (\n    <>\n      <div className=\"header\">\n        <h1>Notes</h1>\n        {/* <button className=\"toggle-button\">toggle mode</button> */}\n      </div>\n    </>\n  );\n}\n","import NotesList from \"./components/NotesList/NotesList\";\nimport Search from \"./components/search/Search\";\nimport Header from \"./components/Header/Header\"\nimport \"./app.css\";\nimport { useState, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\" \n\n/*\n  TODO:\n    add title to note\n\n  TODO:\n    search by note\n\n  TODO:\n    change styles\n*/\n\nexport default function App() {\n  const [notes, setNotes] = useState([]);\n  const [searchText, setSearchText] = useState('')\n\n  useEffect(() => {\n    const localStorageData = localStorage.getItem(\"notes-data\")\n    const savedNotes = JSON.parse(localStorageData)\n\n    if (savedNotes) {\n      setNotes(savedNotes)\n    }\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(\"notes-data\", JSON.stringify(notes))\n  }, [notes])\n\n  function addNote(text: string) {\n    const date = new Date()\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString()\n    }\n    const newNotes = [...notes, newNote]\n    setNotes(newNotes)\n\n  }\n\n  function deleteNote(id: string) {\n    const newNotes = notes.filter(note => note.id !== id)\n    setNotes(newNotes)\n  }\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <Search \n        handleSearchNote={setSearchText}\n      />\n      <NotesList \n        notes={notes.filter(note => note.text.toLowerCase().includes(searchText))}\n        handleDeleteNote={deleteNote} \n        handleAddNote={addNote}\n      />\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}